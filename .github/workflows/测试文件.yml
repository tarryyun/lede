name: OpenWrt Custom Build

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Cleanup and Initialization
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* snap* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Modify feeds.conf.default
        run: |
          echo 'src-git small https://github.com/kenzok8/small' >>feeds.conf.default
          echo 'src-git xuanranran https://github.com/xuanranran/openwrt-packages' >>feeds.conf.default

      - name: Update and Install Feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Check .config file
        run: |
          if [ -f .config ]; then
            echo ".config file exists, using it."
          else
            echo "No .config file found! Please add your custom .config."
            exit 1
          fi

      - name: Ensure Configuration Completeness
        run: make defconfig

      - name: Compile Firmware
        run: |
          make -j$(($(nproc) + 1)) V=s || make -j1 V=s
          df -h

      - name: Organize Firmware Files
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload Build Info
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload Packages
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Generate Release Tag
        id: tag
        run: echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          name: "OpenWrt Firmware - ${{ env.release_tag }}"
          body: "Automated release for OpenWrt firmware."
          files: ./bin/targets/*/*
