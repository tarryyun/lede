# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: 小米CR6608_lede_第二次固件编译

on:
  repository_dispatch:
  workflow_dispatch:

permissions:
  contents: write

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Check Disk Space Before Cleanup
        run: df -h

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -mark hold grub-efi-amd64-signed
          sudo -E apt-get update
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* snap*
          sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          echo "Cleanup finished."

      - name: Check Disk Space After Cleanup
        run: df -h

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Update feeds
        run: |
          echo "Updating feeds..."
          echo 'src-git small https://github.com/kenzok8/small' >>feeds.conf.default
          echo 'src-git xuanranran https://github.com/xuanranran/openwrt-packages' >>feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          echo "Feeds update completed."

      - name: Check Disk Space After Feeds Update
        run: df -h

      - name: Use Custom Configuration
        run: |
          [ -e .config ] && echo "Using custom .config"

      - name: Check Disk Space Before Downloading Packages
        run: df -h

      - name: Download packages
        run: make download -j16

      - name: Check Disk Space After Downloading Packages
        run: df -h

      - name: Compile firmware
        run: |
          echo "Starting firmware compilation..."
          make -j$(nproc) || make -j1 V=s
          echo "Compilation completed."
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Check Disk Space After Compilation
        run: df -h

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Check Disk Space After Uploading Artifacts
        run: df -h

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.run_number }}
          name: OpenWrt Release ${{ github.run_number }}
          draft: false
          prerelease: false
          body: |
            OpenWrt Firmware Build - ${{ github.run_number }}
            - 自动编译 OpenWrt 固件
            - 包含所有最新依赖

      - name: Upload Firmware to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.run_number }}
          files: ./bin/targets/*/*.img.gz
